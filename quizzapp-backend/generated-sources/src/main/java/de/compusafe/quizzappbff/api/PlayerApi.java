/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package de.compusafe.quizzappbff.api;

import de.compusafe.quizzappbff.model.Player;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-06-25T14:41:33.941689600+02:00[Europe/Berlin]")
@Validated
@Tag(name = "Player", description = "the Player API")
public interface PlayerApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /player : Returns a list of users
     * this is a description
     *
     * @return List with all players (status code 200)
     */
    @Operation(
        operationId = "playerGet",
        summary = "Returns a list of users",
        description = "this is a description",
        tags = { "Player" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List with all players", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Player.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/player",
        produces = { "application/json" }
    )
    default ResponseEntity<List<List<Player>>> playerGet(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ [ { \"name\" : \"name\", \"id\" : 0, \"email\" : \"email\" }, { \"name\" : \"name\", \"id\" : 0, \"email\" : \"email\" } ], [ { \"name\" : \"name\", \"id\" : 0, \"email\" : \"email\" }, { \"name\" : \"name\", \"id\" : 0, \"email\" : \"email\" } ] ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
